{"version":3,"sources":["../011_piechart.js"],"names":["svgWidth","svgHeight","svg","d3","select","attr","margin","top","right","bottom","left","width","height","radius","Math","min","g","append","color","scaleOrdinal","pie","sort","value","d","population","path","arc","outerRadius","innerRadius","label","csv","then","selectAll","data","enter","age","centroid","text"],"mappings":";;AAAA;;;;AAIA,IAAMA,WAAW,GAAjB;AACA,IAAMC,YAAY,GAAlB;;AAEA,IAAMC,MAAMC,GAAGC,MAAH,CAAU,KAAV,EACPC,IADO,CACF,OADE,EACOL,QADP,EAEPK,IAFO,CAEF,QAFE,EAEQJ,SAFR,CAAZ;;AAIA,IAAMK,SAAS,EAACC,KAAK,EAAN,EAAUC,OAAO,EAAjB,EAAqBC,QAAQ,EAA7B,EAAiCC,MAAM,EAAvC,EAAf;AACA,IAAMC,QAAQX,WAAWM,OAAOI,IAAlB,GAAyBJ,OAAOE,KAA9C;AACA,IAAMI,SAASX,YAAYK,OAAOC,GAAnB,GAAyBD,OAAOG,MAA/C;AACA,IAAMI,SAASC,KAAKC,GAAL,CAASJ,KAAT,EAAgBC,MAAhB,IAA0B,CAAzC;AACA,IAAMI,IAAId,IAAIe,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,WAArB,EAAkC,eAAeM,QAAQ,CAAvB,GAA2B,GAA3B,GAAiCC,SAAS,CAA1C,GAA8C,GAAhF,CAAV;;AAEA,IAAMM,QAAQf,GAAGgB,YAAH,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAC1B,SAD0B,EACf,SADe,EACJ,SADI,EACO,SADP,CAAhB,CAAd;;AAIA,IAAMC,MAAMjB,GAAGiB,GAAH,GACPC,IADO,CACF,IADE,EAEPC,KAFO,CAED;AAAA,WAAKC,EAAEC,UAAP;AAAA,CAFC,CAAZ;;AAIA,IAAMC,OAAOtB,GAAGuB,GAAH,GACRC,WADQ,CACId,SAAS,EADb,EAERe,WAFQ,CAEI,CAFJ,CAAb;;AAKA,IAAMC,QAAQ1B,GAAGuB,GAAH,GACTC,WADS,CACGd,SAAS,EADZ,EAETe,WAFS,CAEGf,SAAS,EAFZ,CAAd;;AAKAV,GAAG2B,GAAH,CAAO,2BAAP,EAAoC,aAAK;;AAErCP,MAAEC,UAAF,GAAe,CAACD,EAAEC,UAAlB;AACA,WAAOD,CAAP;AAEH,CALD,EAKGQ,IALH,CAKU,gBAAQ;;AAEd,QAAML,MAAMV,EAAEgB,SAAF,CAAY,MAAZ,EACPC,IADO,CACDb,IAAIa,IAAJ,CADC,EAEPC,KAFO,GAECjB,MAFD,CAEQ,GAFR,EAGPZ,IAHO,CAGF,OAHE,EAGO,KAHP,CAAZ;;AAKAqB,QAAIT,MAAJ,CAAW,MAAX,EACKZ,IADL,CACU,GADV,EACeoB,IADf,EAEKpB,IAFL,CAEU,MAFV,EAEkB;AAAA,eAAKa,MAAMK,EAAEU,IAAF,CAAOE,GAAb,CAAL;AAAA,KAFlB;;AAIAT,QAAIT,MAAJ,CAAW,MAAX,EACKZ,IADL,CACU,WADV,EACuB;AAAA,eAAK,eAAewB,MAAMO,QAAN,CAAeb,CAAf,CAAf,GAAmC,GAAxC;AAAA,KADvB,EAEKlB,IAFL,CAEU,IAFV,EAEgB,QAFhB,EAGKgC,IAHL,CAGW;AAAA,eAAKd,EAAEU,IAAF,CAAOE,GAAZ;AAAA,KAHX;AAKH,CArBD","file":"011_piechart.js","sourcesContent":["/**\n * Reference: https://bl.ocks.org/mbostock/3887235\n */\n\nconst svgWidth = 960;\nconst svgHeight = 500;\n\nconst svg = d3.select(\"svg\")\n    .attr(\"width\", svgWidth)\n    .attr(\"height\", svgHeight);\n\nconst margin = {top: 20, right: 20, bottom: 30, left: 50};\nconst width = svgWidth - margin.left - margin.right;\nconst height = svgHeight - margin.top - margin.bottom;\nconst radius = Math.min(width, height) / 2;\nconst g = svg.append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\nconst color = d3.scaleOrdinal([\"#98abc5\", \"#8a89a6\", \"#7b6888\",\n    \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\n\nconst pie = d3.pie()\n    .sort(null)\n    .value(d => d.population);\n\nconst path = d3.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\n\nconst label = d3.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);\n\n\nd3.csv(\"tsv/data_011_piechart.csv\", d => {\n\n    d.population = +d.population;\n    return d;\n\n}).then ( data => {\n\n    const arc = g.selectAll(\".arc\")\n        .data( pie(data) )\n        .enter().append(\"g\")\n        .attr(\"class\", \"arc\");\n\n    arc.append(\"path\")\n        .attr(\"d\", path)\n        .attr(\"fill\", d => color(d.data.age) );\n\n    arc.append(\"text\")\n        .attr(\"transform\", d => \"translate(\" + label.centroid(d) + \")\" )\n        .attr(\"dy\", \"0.35em\")\n        .text( d => d.data.age );\n\n});"]}