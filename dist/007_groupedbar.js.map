{"version":3,"sources":["../007_groupedbar.js"],"names":["svgWidth","svgHeight","svg","d3","select","attr","margin","top","right","bottom","left","width","height","g","append","x0","scaleBand","rangeRound","paddingInner","x1","padding","y","scaleLinear","z","scaleOrdinal","range","csv","d","i","columns","n","length","then","console","log","data","keys","slice","domain","map","State","bandwidth","max","key","nice","selectAll","enter","value","call","axisBottom","axisLeft","ticks","pop","text","legend","reverse"],"mappings":"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","file":"007_groupedbar.js","sourcesContent":["/**\n * Reference: https://bl.ocks.org/mbostock/3887051\n */\n\n\n\nconst svgWidth = 960;\nconst svgHeight = 500;\nconst svg = d3.select(\"svg\")\n    .attr(\"width\", svgWidth)\n    .attr(\"height\", svgHeight);\n\nconst margin = {top: 20, right: 20, bottom: 30, left: 40};\nconst width = svgWidth - margin.left - margin.right;\nconst height = svgHeight - margin.top - margin.bottom;\n\nconst g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nconst x0 = d3.scaleBand()\n    .rangeRound([0, width])\n    .paddingInner(0.1);\n\nconst x1 = d3.scaleBand()\n    .padding(0.05);\n\n\nconst y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\nconst z = d3.scaleOrdinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\"\n        , \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\nd3.csv(\"tsv/data_007_groupedbar.csv\", (d,i, columns) => {\n\n    for (let i=1, n = columns.length; i<n; ++i )\n        d[columns[i]] = +d[columns[i]];\n    return d;\n\n\n}).then( data => {\n\n    console.log(data);\n\n\n    const keys = data.columns.slice(1); // Getting the keys, starting from column 1\n\n    console.log(keys);\n\n    /*\n    function mytest(d) {\n        return keys.map(key => ({key:key, value: d[key]}) );\n    }\n    console.log(mytest(data[0]));\n    console.log(mytest(data[1]));\n    */\n\n    x0.domain(data.map(d => d.State));\n    x1.domain(keys).rangeRound([0, x0.bandwidth()]);\n\n    console.log(\"x0.bandwidth() = \" + x0.bandwidth());\n\n    y.domain([0, d3.max(data, d => d3.max(keys, key => d[key]))]).nice();\n\n    // Draw the bars here..\n    g.append(\"g\")\n        .selectAll(\"g\")\n        .data(data)\n        .enter().append(\"g\")\n        .attr(\"transform\", d => \"translate(\" + x0(d.State) + \",0)\" )\n        .selectAll(\"rect\")\n        .data( d => keys.map(key => ({key:key,value:d[key]})) )\n        .enter().append(\"rect\")\n        .attr(\"x\", d => x1(d.key) )\n        .attr(\"y\", d => y(d.value) )\n        .attr(\"width\", x1.bandwidth())\n        .attr(\"height\", d => height - y(d.value) )\n        .attr(\"fill\", d => z(d.key) );\n\n\n    // Draw the x-axis\n    g.append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x0));\n\n    // Draw the y-axis\n    g.append(\"g\")\n        .attr(\"class\", \"axis\")\n        .call(d3.axisLeft(y).ticks(null, \"s\"))\n        .append(\"text\")\n        .attr(\"x\", 2)\n        .attr(\"y\", y(y.ticks().pop()) + 0.5)\n        .attr(\"dy\", \"0.32em\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"start\")\n        .text(\"Population\");\n\n    // Legend (top-right corner)\n    const legend = g.append(\"g\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"text-anchor\", \"end\")\n        .selectAll(\"g\")\n        .data(keys.reverse())\n        .enter().append(\"g\")\n        .attr(\"transform\", (d, i) => \"translate(0,\" + i * 20 + \")\");\n\n    legend.append(\"rect\")\n        .attr(\"x\", width - 19)\n        .attr(\"width\", 19)\n        .attr(\"height\", 19)\n        .attr(\"fill\", z);\n\n    legend.append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9.5)\n        .attr(\"dy\", \"0.32em\")\n        .text(d => d);\n\n\n\n\n\n\n\n});\n"]}