{"version":3,"sources":["../009_areachart.js"],"names":["svgWidth","svgHeight","svg","d3","select","attr","margin","top","right","bottom","left","width","height","g","append","parseTime","timeParse","x","scaleTime","rangeRound","y","scaleLinear","area","d","date","y1","close","tsv","then","domain","extent","data","y0","min","call","axisBottom","remove","axisLeft","ticks","text","datum"],"mappings":"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","file":"009_areachart.js","sourcesContent":["/**\n *\n * Reference: hhttps://bl.ocks.org/mbostock/3883195\n */\n\nconst svgWidth = 960;\nconst svgHeight = 500;\n\nconst svg = d3.select(\"svg\")\n    .attr(\"width\", svgWidth)\n    .attr(\"height\", svgHeight);\n\nconst margin = {top: 20, right: 20, bottom: 30, left: 50};\nconst width = svgWidth - margin.left - margin.right;\nconst height = svgHeight - margin.top - margin.bottom;\nconst g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nconst parseTime = d3.timeParse(\"%d-%b-%y\");\nconst x = d3.scaleTime()\n        .rangeRound([0,width]);\n\nconst y = d3.scaleLinear()\n        .rangeRound([height, 0]);\n\n/*const line = d3.line()\n        .x( d => x(d.date))\n        .y( d => y(d.close));*/\n\nconst area = d3.area()\n    .x( d => x(d.date) )\n    .y1 ( d => y(d.close) );\n\n\nd3.tsv(\"tsv/data_008_linechart.tsv\", d => {\n    d.date = parseTime(d.date);\n    d.close = +d.close;\n    return d;\n}).then( data => {\n    //console.log(data);\n\n    // returns the minimum and maximum value in the given array\n    x.domain(d3.extent(data, d => d.date));\n    y.domain(d3.extent(data, d => d.close));\n\n    // area.y0 = minimum value of d.close\n    area.y0(y(d3.min(data, d=>d.close)));\n\n    // alternatively:\n    //  y.domain( [0, d3.max(data, d => d.close)] )\n    //  area.y0( y(0) )\n    \n    // x-axis\n    //let xAxis = d3.axisBottom(x).ticks(15);\n\n    g.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x))  // use .tick(value) to control the ticks..\n        .select(\".domain\")  // remove the lines...\n        .remove();\n\n    // y-axis\n    g.append(\"g\")\n        .call(d3.axisLeft(y).ticks(5)) // controls the number of ticks\n        .append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Price ($)\");\n\n    // line data values\n\n    g.append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"steelblue\")\n        //.attr(\"stroke\", \"steelblue\")\n        //.attr(\"stroke-linejoin\", \"round\")\n        //.attr(\"stroke-linecap\", \"round\")\n        //.attr(\"stroke-width\", 1.5)\n        .attr(\"d\", area); // use the area function here..\n\n\n\n\n\n\n});"]}